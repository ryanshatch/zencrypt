"""
********************************************************************************************
* models.py                        |********************************************************
* Developed by: Ryan Hatch         |********************************************************
* Date: August 10th 2022           |********************************************************
* Last Updated: Febuary 13th 2025  |********************************************************
* Version: 6.2-A                   |********************************************************
********************************************************************************************
********************************#* Description: |*******************************************
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
|  models.py is a module that contains the database models for the web-app.                *
*    SQLite / SQLAlchemy to define the models and their relationships. The models are:     *
*       - User: stores the user information.                                               *
*       - Hash: stores the hashes generated by the user.                                   *
*       - EncryptedText: stores the encrypted texts generated by the user.                 *
*       - Key: stores the keys generated by the user.                                      *
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
********************************************************************************************
"""

#* ---------------------- | Import libraries for the web-app | ---------------------- *#
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime

__all__ = ['db', 'User', 'Hash', 'EncryptedText', 'Key', 'PGPKey']

#* ---------------------- | Database Models | --------------------- *#
db = SQLAlchemy() # Initialize the database object for the web-app

#* ---------------------- | User Model | -------------------------- *#
class User(db.Model): # User model for the web-app
    id = db.Column(db.Integer, primary_key=True) # Primary key for the user
    email = db.Column(db.String(120), unique=True, nullable=False) # Email for the user as UID
    password_hash = db.Column(db.String(256), nullable=False)    # Password hash for the user account
    created_at = db.Column(db.DateTime, default=datetime.utcnow) # Date and time the user account was created
    
    # Shared resources for the user
    hashes = db.relationship('Hash', backref='user', lazy=True)                     # hashes, encrypted texts, and keys are linked to the users 'user_id'
    encrypted_texts = db.relationship('EncryptedText', backref='user', lazy=True)   # Related objects are loaded in a single query for efficiency

#* ---------------------- | Hash Model | ------------------------- *#
class Hash(db.Model): # Hash model for the web-app
    id = db.Column(db.Integer, primary_key=True)    # Primary key for the hash
    hash_value = db.Column(db.String(256), nullable=False)  # Hash value generated by the user
    salt = db.Column(db.String(256))    # Salt used to generate the hash  
    created_at = db.Column(db.DateTime, default=datetime.utcnow)    # Date and time the hash was created
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False) # Foreign key to link the hash to the user

#* ---------------------- | Encrypted Text Model | --------------- *#
class EncryptedText(db.Model): # Encrypted text model for the web-app
    id = db.Column(db.Integer, primary_key=True)   # Primary key for the encrypted text
    encrypted_content = db.Column(db.Text, nullable=False) # Encrypted text content
    created_at = db.Column(db.DateTime, default=datetime.utcnow)    # Date and time the encrypted text was created
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)

#* ---------------------- | Key Model | ------------------------- *#
class Key(db.Model): # Key model for the web-app
    id = db.Column(db.Integer, primary_key=True)    # Primary key for the key
    key_value = db.Column(db.String(256), nullable=False)   # Key value generated by the user
    active = db.Column(db.Boolean, default=True)    # Key is active by default
    created_at = db.Column(db.DateTime, default=datetime.utcnow)    # Date and time the key was created
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False) # Foreign key to link the key to the user

#* ---------------------- | PGP Key Model | ------------------------- *#
class PGPKey(db.Model): # PGP Key model for the web-app
    id = db.Column(db.Integer, primary_key=True)    # Primary key for the key
    public_key = db.Column(db.Text, nullable=False) # Store public key in plain text
    private_key = db.Column(db.Text, nullable=False)  # Store encrypted
    active = db.Column(db.Boolean, default=True)   # Key is active by default
    created_at = db.Column(db.DateTime, default=datetime.utcnow)   # Date and time the key was created
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False) # Foreign key to link the key to the user